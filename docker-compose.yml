services:

  # Service de l'application Node.js/Express
  app:
    build: . # Utilise le Dockerfile dans le repertoire courant
    ports:
      - "3000:3000" # Mappe le port 3000 de l'hote au port 3000 du conteneur
      # Adaptez si votre app ecoute sur un autre port
    environment:
      # Configuration de la base de donnees via variables d'environnement
      DATABASE_HOST: db # 'db' est le nom du service de la base de donnees dans ce fichier
      DATABASE_PORT: 5432
      DATABASE_USER: monutilisateur # A remplacer
      DATABASE_PASSWORD: motdepassedelabase # A remplacer (Utiliser des secrets en prod!)
      DATABASE_NAME: mabasepokemon # A remplacer
      NODE_ENV: development # Indique que l'on est en environnement de developpement
      ENCRYPTION_SECRET: monSuperSecretPoké123 #TODO ajouter un secret en prod et pas en clair ici

    depends_on:
      - db # Le service 'app' depend du service 'db'

    # *** Configuration essentielle pour le developpement a chaud ***
    volumes:
      # Monte le repertoire courant de l'hote dans le repertoire /app du conteneur.
      # Les changements de code locaux seront visibles dans le conteneur.
      - .:/app
      # Optionnel: Pour eviter les problemes de permissions ou de re-installation de node_modules,
      # vous pouvez monter node_modules dans un volume separe.
      - node_modules:/app/node_modules
    # Surcharge la commande par defaut du Dockerfile pour lancer l'application en mode dev
    # Execute le script 'dev' defini dans votre package.json
    command: npm run dev

    restart: unless-stopped # Redemarre le conteneur sauf s'il est explicitement arrete

  # Service de la base de donnees PostgreSQL
  db:
    image: postgres:16 # Utilise une image Postgres specifique et stable
    ports:
      - "5432:5432" # Mappe le port 5432 de l'hote (optionnel, pour outils admin)
    environment:
      POSTGRES_USER: monutilisateur # Doit correspondre a DATABASE_USER ci-dessus
      POSTGRES_PASSWORD: motdepassedelabase # Doit correspondre a DATABASE_PASSWORD ci-dessus
      POSTGRES_DB: mabasepokemon # Doit correspondre a DATABASE_NAME ci-dessus
      # Ajouter d'autres options d'initialisation si necessaire
    volumes:
      # Volume nomme pour la persistance des donnees de la BDD
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
  db_account_migration_test:
    image: postgres:16-alpine # Utilisez la même image ou une compatible
    container_name: pokecentermanager-db-account-migration-test # Nom plus clair
    environment:
      POSTGRES_USER: monutilisateur_test # Utilisez un utilisateur potentiellement différent
      POSTGRES_PASSWORD: monmotdepassetest # Utilisez un mot de passe différent
      POSTGRES_DB: secondary_migration_db # Nom de la base de données dédiée à la génération
    ports:
      - "5433:5432" # Mapper sur un port différent sur l'hôte pour éviter les conflits si besoin
    volumes:
      - db_account_migration_test_data:/var/lib/postgresql/data # Volume dédié pour sa persistance
    # N'a pas besoin de dépendre d'autres services
    # Ne pas inclure dans les dépendances de 'app'
# Definition des volumes nommes
volumes:
  db_data: {} # Volume pour les donnees PostgreSQL
  # Si vous avez decommentee la ligne '/app/node_modules' ci-dessus, ajoutez aussi :
  node_modules: {} # Volume pour les dependances Node.js (optionnel)
  db_account_migration_test_data: {}